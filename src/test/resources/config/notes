
    import io.circe.yaml.parser
    import io.circe._
    val config = getClass.getClassLoader.getResourceAsStream("src/test/resources/config/task1.yaml")
    val json = parser.parse(new InputStreamReader(config))


    ----------

    import cats.syntax.either._
    import io.circe._
    import io.circe.generic.auto._
    import io.circe.yaml

    val json = yaml.parser.parse("""
task:
  n1:
    component: reader
    predecessor: void
    config:
      size: 10
      predicate: true
  n2:
    component: splitter
    predecessor: n1
    config:
      transformer: # DSL
        - div_by_two
      result: left
  n3:
    component: writer
    predecessor: n2
    config: # whatever
      predicate: true # whatever
""")

    val graph = json
      .leftMap(err => err: Error)
      .flatMap(_.as[GraphCfg])
      .valueOr(throw _)

    println(graph)
